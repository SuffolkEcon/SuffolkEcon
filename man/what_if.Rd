% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulations.R
\name{what_if}
\alias{what_if}
\title{Bootstrap sampling distributions ("what if we ran the experiment many times...")}
\usage{
what_if(
  data,
  variable = NULL,
  model = NULL,
  stat = NULL,
  group = NULL,
  focus = NULL,
  experiments = 100L,
  sample_size = 100L,
  plot = TRUE,
  p.values = FALSE,
  seed = sample.int(.Machine$integer.max, 1),
  ...
)
}
\arguments{
\item{data}{data of class \code{data.frame}}

\item{variable}{a continuous variable from the data frame. Only relevant if using `stat` (to boostrap a sample statistic)}

\item{model}{a model or formula, e.g., `y ~ x1 + x2`. Use this to boostrap a linear model}

\item{stat}{an R summary statistic function (e.g., `mean()`, `median()`, `max()`, `sd()`) entered as a string (e.g., "mean", "median", "max", "sd")}

\item{group}{categorical grouping variable from \code{data} (defaults to NULL). If activated each simulation evenly samples \code{data} according to \code{group}}

\item{focus}{an independent variable from \code{model} (defaults to FALSE). Only required if \code{model} is a multiple linear regression}

\item{experiments}{number of experiments, i.e. runs of the boostrap sampler (defaults to 100)}

\item{sample_size}{sample size of each experiment (defaults to 100)}

\item{plot}{plot the sampling distribution of the regression coefficient (defaults to TRUE)}

\item{p.values}{plot the cumulative distribution of p-values and report the number of significant results (defaults to TRUE)}

\item{seed}{random number generator seed}

\item{...}{additional arguments to adjust the plots}
}
\value{
\code{ggplot} object if \code{plot = TRUE}, otherwise a \code{data.frame}
}
\description{
Estimate the sampling distribution of a sample statistic or regression coefficient from a linear model (\code{lm})
}
\examples{
# using the nhanes data
data("nhanes", package = "SuffolkEcon")

# sampling distribution of the mean of height
what_if(data = nhanes, variable = height, stat = 'mean')

# sampling distribution and p-values for lm(formula = weight ~ height, data = nhanes)
what_if(data = nhanes, model = weight ~ height, sample_size = 30, experiments = 100, p.values = TRUE)

# increase the number of experiments
what_if(data = nhanes, model = weight ~ height, sample_size = 30, experiments = 1000, p.values = TRUE)
}
\author{
Lawrence R. De Geest
}
